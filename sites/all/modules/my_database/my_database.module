<?php 
/**
 * @file
 * Contains base function for module.
 */


/**
 * Implements hook_permission().
 */
function my_database_permisiion() {
  return array(
    'submit_my_database_form' => array(
      'title' => t('Submit my_database_form'),
      'description' => t('Submit the my_database_form'),
    ),
  );
}



/**
 * Implements hook_menu().
 */
function my_database_menu() {
  $items = array();

  $items['my-db'] = array(
    'title callback'   => 'test_title',
    'description'      => 'blabla',
    'page callback'    => 'my_database_callback_function',
    'access arguments' => array('submit_my_database_form'),
    'menu_name'        => 'menu-done',
  );
  $items['my-db-table'] = array(
    'title'            => t('my DataBase table'),
    'description'      => 'xxxxxxx',
    'page callback'    => 'my_database_table_callback_function',
    'access arguments' => array('submit_my_database_form'),
    'menu_name'        => 'menu-done',
  );
  $items['my-db/%/delete'] = array(
    'title callback'   => 'my_database_delete_page_title',
    'title arguments'  => array(1),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('my_database_delete_form', 1),
    'access arguments' => array('submit_my_database_form'),
  );
  $items['my-db/%/edit'] = array(
    'title callback'   => 'my_database_edit_page_title',
    'title arguments'  => array(1),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('my_database_edit_form', 1),
    'access arguments' => array('submit_my_database_form'),
  );
  return $items;
}

function test_title() {
  return 'form + DB';
}

/**
 * my-db page callback function
 */
function my_database_callback_function() {
  $output = array();
  $output = drupal_get_form('my_database_form');
  return $output;
}

/**
 * my-db-table page callback function
 */
function my_database_table_callback_function() {
  $output = '';

  //таблиця
  $header = array(
    array('data' => t('id')),
    array('data' => t('number')),
    array('data' => t('teaser')),
    array('data' => t('text')),
    array('data' => t('Actions')),
  );
  $query = db_select('custom_table', 't')
    ->fields('t', array('id', 'number', 'teaser', 'text'))
    ->orderBy('id', 'ASC')//ORDER BY
    ->execute();

  $rows = array();
  while ($value = $query->fetchAssoc()) {
    $rows[] = array(
      array('data' => $value['id']),
      array('data' => $value['number']),
      array(
        'data' => t($value['teaser']),
        array('data' => t($value['text'])),
        l(t('edit'), 'my-db/' . $value['id'] . '/edit')
        . '<br>'
        . l(t('delete'), 'my-db/' . $value['id'] . '/delete'),
      )
    );
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows));

  return $output;
}

/**
 * form 
 */
function form_template($val_number, $val_teaser, $val_text, $val_sub_button) {
  $form['number'] = array(
    '#type' => 'textfield',
    '#title' => t('number'),
    '#size' => 60,
    '#maxlength' => 60,
    '#required' => TRUE,
    '#default_value' => $val_number,
  );
  $form['teaser'] = array(
    '#type' => 'textarea',
    '#title' => t('teaser'),
    '#rows' => 3,
    '#required' => TRUE,
    '#attributes' => array(
      'maxlength' => array('150'),
    ),
    '#description' => t('maxlength: 150 chars'),
    '#default_value' => $val_teaser,
  );
  $form['text'] = array(
    '#type' => 'textarea',
    '#title' => t('long text'),
    '#rows' => 7,
    '#required' => TRUE,
    '#default_value' => $val_text,
  );
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t($val_sub_button),
  );
  return $form;
}

function my_database_form($form, &$form_state) {
  return form_template('','','', 'insert into database');
}

//перевірка на integer
function my_database_form_validate($form, &$form_state) {
  $value = $form_state['values']['number'];
  if ($value !== '' && (!is_numeric($value) || intval($value) != $value)) {
    form_set_error('number', t('check your number. It must be integer.'));
  }
}

function my_database_form_submit($form, &$form_state) {
  $query = db_insert('custom_table')->fields(array(
      'number' => $form_state['values']['number'],
      'teaser' => $form_state['values']['teaser'],
      'text'   => $form_state['values']['text'],
    ))
    ->execute();
  if ($query > 0) {
    drupal_set_message(t('Data has been successfully sent.'));
  }
  else {
    drupal_set_message(t("Data hasn't been sent."), 'error');
  }
  $form_state['redirect'] = 'my-db-table';
}



function my_database_delete_page_title($id) {
  $placeholders = array(':id' => $id);
  $number = db_query("SELECT `number` FROM {custom_table} WHERE `id` = :id", $placeholders)
    ->fetchField();
  return t("Are you sure you want to delete item with number '@num'?", array('@num' => $number));
}



function my_database_delete_form($form, $form_state) {
  $form = array();
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Submit'),
  );
  $form['cancel'] = array(
    '#markup' => l(t('Cancel'), 'my-db-table'),
  );
  return $form;
}


function my_database_delete_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $query = db_delete('custom_table')
    ->condition('id', $id)
    ->execute();
  $placeholders = array('@id' => $id);
  if ($query) {
    drupal_set_message(t("Data with id = @id has been successfully deleted.", $placeholders));
  }
  else {
    drupal_set_message(t("Data hasn't been deleted."), 'error');
  }
  $form_state['redirect'] = 'my-db-table';
}



function my_database_edit_form($form, $form_state) {
  $id = $form_state['build_info']['args'][0];
  $placeholders = array(':id' => $id);
  $query = db_select('custom_table', 't')
    ->fields('t', array('number', 'teaser', 'text'))
    ->condition('id', $id)
    ->execute();
  $value = $query->fetchAssoc();
  return form_template($value['number'], $value['teaser'], $value['text'], 'edit');
}

function my_database_edit_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $query = db_update('custom_table')
    ->fields(array(
        'number' => $form_state['values']['number'],
        'teaser' => $form_state['values']['teaser'],
        'text'   => $form_state['values']['text'],
      )
    )
    ->condition('id', $id)
    ->execute();
  if ($query > 0) {
    drupal_set_message(t('Data has been successfully edited.'));
  }
  else {
    drupal_set_message(t("Data hasn't been edited."), 'error');
  }
  $form_state['redirect'] = 'my-db-table';
}
